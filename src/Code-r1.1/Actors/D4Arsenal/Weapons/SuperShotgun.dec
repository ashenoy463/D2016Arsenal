ACTOR D4SSG : D4WeaponBase replaces SSG
{
	Weapon.AmmoGive1 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "D4Shells"
	Weapon.AmmoType2 "D4SSGAmmo"
	Weapon.AmmoUse1 0
	Weapon.AmmoUse2 0
    +WEAPON.NOAUTOAIM
	+WEAPON.NOAUTOFIRE
	Inventory.PickupMessage "You got the Super Shotgun!"
	tag "Super Shotgun"
	Obituary "%o was blasted by %k's Super Shotgun"
    Inventory.PickupSound "CLIPINSS"
	States
	{		
	Spawn:
		D4W3 B 1
		TNT1 A 0 A_SpawnItemEx("D4SSGSpawnerNoAmmo", 0, 0, 0, velx, vely, velz, angle, SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY)
		Stop
		
	WReady:
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("IsUpgradingWeapons",1,"DualWieldAnimChecker")
        TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
		TNT1 A 0 A_JumpIfInventory("Fistting",1,"DoPunch")
		TNT1 A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"DualWieldAnimChecker")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"DualWieldAnimChecker")
		TNT1 A 0 A_JumpIfInventory("StartUpgrader",1,"StartUpgrader")
		TNT1 A 0 A_JumpIfInventory("Unloading",1,"AimSwitch")
		TNT1 A 0 A_JumpIfInventory("StartDualWield",1,"DualWield")
		TNT1 A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "ReadyDualWield")
		SSGG A 1 A_WeaponReady	
		Loop
				
	StartUpgrader:
		TNT1 A 0 A_TakeInventory("StartUpgrader",1)
		TNT1 A 0 A_GiveInventory("UpgradeSuperShotgun",1)
		TNT1 A 0 A_SelectWeapon("D4WeaponUpgrader")
		Goto WReady
		
	Flash:
		TNT1 A 1 A_JumpIfInventory("SSGDualWield",1,"RightWeapon")
		Loop
		
	Deselect:
		TNT1 A 0 A_JumpIfInventory("ChecksIsFiringTheRightGun",1,"WReady")
		TNT1 A 0 ACS_NamedTerminate("DualWieldChecker")
		TNT1 A 0 A_TakeInventory("IsUpgradeableWeapon", 1)
		TNT1 A 0 A_Takeinventory("NoParkour",1)
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "DeselectDualWield")
		SSGS EDCBA 1
		SSGS A 0
		Goto DeselectSequence
		
	Select:
		TNT1 A 0 A_GiveInventory("SwitchWeaponTaker", 1)
		TNT1 A 0 A_Giveinventory("GoSpecial",1)
		TNT1 A 0 A_Giveinventory("SSGSelected",1)
		TNT1 A 0 A_GiveInventory("IsUpgradeableWeapon", 1)
		TNT1 A 0 A_JumpIfInventory("IsDemonPlayer", 1, "SelectSpecial")
		TNT1 A 0 A_JumpIfInventory("JustStartedGame",1,"SelectSpecial")
	    TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "SelectSpecial")
		SSGS A 0
		Goto SelectSequence

	Ready:
        TNT1 A 0 A_GunFlash
		TNT1 A 0 ACS_NamedExecuteAlways("DualWieldChecker")
		TNT1 A 0 A_PlaySound("Weapon/Switch")
	SelectAnimation:
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "DeployDualWield")
        SSGS ABCDE 1
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady
		
    NoAmmo:
		TNT1 A 0 A_JumpIfInventory("D4Shells", 1, "Reload")
        SSGG A 0 A_PlaySound("weapons/empty", 2)
		NoAmmo2:
		SHTZ A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
	    SHTZ A 0 A_JumpIfInventory("Taunting",1,"TauntL")
		SHTZ A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		SHTZ A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		SHTZ A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		SHTZ A 0 A_JumpIfInventory("Kicking",1,"DoKick")
		TNT1 A 0 A_JumpIfInventory("Fistting",1,"DoPunch")
		SSGG A 5 A_WeaponReady
		SHTZ A 0 A_JumpIfInventory("Reloading",1,"Reload")
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "NoAmmo2")
		SHTZ A 0 A_JumpIfInventory("D4Shells",1,"Reload")
		SHTZ A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo2")
		Goto WReady
		
	Fire:
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "FireDualWield")
		TNT1 A 0 A_JumpIfInventory("SSGAimMode",1,"AimFire")
		TNT1 A 0 A_JumpIfInventory("SSGAlt",1,"SingleFire")
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo", 2, "NormalFireStart")
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo", 1, "LastFire")
		Goto NoAmmo

	AltFire:
		TNT1 A 0 A_JumpIfInventory("SSGAimModeSwitch",1,"AimMode")
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo",1,"AltFireContinue")
        Goto NoAmmo
		
	NormalFireStart:
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
	NormalFire:
		TNT1 A 0 A_GunFlash("BothBarrel")
        SSGF A 1 BRIGHT
        SSGF B 1 BRIGHT
		TNT1 A 0 A_SetPitch(-11.0 + pitch)
		SSGF CCCCD 1 A_SetPitch(+1.0 + pitch)
		SSGF EFGH 1 A_SetPitch(+1.0 + pitch)
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "EndFire")
		TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"EndFireFast")
	EndFire:
		SSGG AA 1
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "EndFireEnd")
		TNT1 A 0 A_JumpIfInventory("D4Shells", 2, "ReloadWeapon")
	EndFireEnd:
		SSGG A 1 A_WeaponReady(WRF_NOFIRE | WRF_NOBOB)
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady
		
	EndFireFast:
		TNT1 A 0 A_JumpIfInventory("D4Shells", 2, "ReloadWeapon")
		Goto EndFire
	
	LastFire:
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
        TNT1 A 0 A_Recoil(2)
		TNT1 A 0 A_TakeInventory("SSGAlt",1)
		TNT1 A 0 A_GunFlash("SingleBarrel")
		Goto AltFireRightBarrel

	AltFireContinue:
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
	SingleFire:
        TNT1 A 0 A_Recoil(2)
		TNT1 A 0 A_GunFlash("SingleBarrel")
		TNT1 A 0 A_JumpIfInventory("SSGAlt",1,"AltFireLeftBarrel")
		TNT1 A 0 A_GiveInventory("SSGAlt",1)
	AltFireRightBarrel:
        SSGA C 1 BRIGHT A_Playsound("SSG/Single",7)
        SSGA D 1 BRIGHT 
		TNT1 A 0 A_SetPitch(-5.0 + pitch)
        SSGF EFGH 1 A_SetPitch(+1.0 + pitch)
		SSGG A 1
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
        Goto WReady

	AltFireLeftBarrel:
        SSGA E 1 BRIGHT A_Playsound("SSG/Single",6)
        SSGA F 1 BRIGHT
		TNT1 A 0 A_SetPitch(-4.0 + pitch)
        SSGF EFGH 1 A_SetPitch(+1.0 + pitch)
		TNT1 A 0 A_TakeInventory("SSGAlt", 1)
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "EndFireSingle")
		TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"EndFireSingleFast")
	EndFireSingle:
		SSGG A 1
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "EndFireSingleEnd")
		TNT1 A 0 A_JumpIfInventory("D4Shells", 2, "ReloadWeapon")
	EndFireSingleEnd:
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady
	EndFireSingleFast:
		TNT1 A 0 A_JumpIfInventory("D4Shells", 2, "ReloadWeapon")
		Goto EndFireSingle
		
	SingleBarrel:
		TNT1 A 0 A_GiveInventory("SSGCaseCounter", 1)
		TNT1 A 0 A_TakeInventory("DualSSGAmmo", 1)
		TNT1 A 0 A_TakeInventory("D4SSGAmmo", 1)
        TNT1 A 0 A_ALertMonsters
		TNT1 AAAAAAAAAAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9))
		TNT1 AAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9))
		TNT1 A 1 A_SetBlend("orange",0.09,8)
		TNT1 A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30)
		RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))
		TNT1 A 1 A_FireBullets (5, 3, 9, 13, "ShotgunPuff", FBF_NORANDOM)
        TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, -12, 0, random(-5,5))
		Goto Flash
		
	BothBarrel:
		TNT1 A 0 A_GiveInventory("SSGCaseCounter", 2)
		TNT1 A 0 A_TakeInventory("DualSSGAmmo", 2)
		TNT1 A 0 A_TakeInventory("D4SSGAmmo", 2)
		TNT1 A 0 A_ZoomFactor(1.6)
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 1)
		TNT1 A 0 A_Recoil(5)	
		TNT1 A 0 A_FireCustomMissile("DistantFireSoundSSG", random(-1,1), 0, 0, -12, 0, random(-1,1))
		TNT1 A 0 A_firebullets (0,0,1,40,"shotpuff",FBF_NORANDOM,300)
		TNT1 A 0 A_Playsound("SSG/Mixed", 7)
		TNT1 AAAAAAAAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-10,10), 0, 0, -12, 0, random(-5,5))
		TNT1 AAAAAAAAAAAAAAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-19,19), 0, -1, 0, 0, random(-9,9))
		TNT1 AAAAAAAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-19,19), 0, -1, 0, 0, random(-9,9))
		TNT1 A 0 A_SetBlend("orange",0.13,8)
		TNT1 A 1 A_playsound("SSG/Fire", 5)
		TNT1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn",15,0,5,0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn",-15,0,6,0)
		TNT1 A 0 A_FireBullets (10, 1, 9, 13, "ShotgunPuff", FBF_NORANDOM)
		TNT1 A 0 A_FireBullets (6, 3, 9, 13, "ShotgunPuff", FBF_NORANDOM)
		TNT1 A 1
		TNT1 A 0 A_ZoomFactor(1.00)
		TNT1 A 0 A_TakeInventory("SSGAlt",1)
		TNT1 A 0 A_TakeInventory("Reloading",1)
		Goto Flash

// ----------------------------------------------------------------------------------------------------------------------------------------------------------
//
// Reload Animation
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------

	Reload:	
		TNT1 A 0 A_TakeInventory("Reloading",1)		
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo", 2, "WReady")//Check if still has a shell on left barrel
		//TNT1 A 0 A_JumpIfInventory("SSGAlt", 1, "ReloadSingle")//Check if still has a shell on left barrel
		//TNT1 A 0 A_JumpIfInventory("D4Shells", 2, "Reload")//Check if has ammo to reload 2 shells
		//TNT1 A 0 A_JumpIfInventory("D4Shells", 1, "ReloadSingle")//Check if has any ammo left to reload
		TNT1 A 0 A_JumpIfInventory("D4Shells", 1, "ReloadWeaponStart")
		Goto WReady
		
	ReloadWeaponStart:
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
	ReloadWeapon:
		SSGG A 1 Offset(18,39) 
		SSGG A 1 Offset(16,38)
		SSGS E 1 Offset(16,38)
		SSGG BC 1 Offset(16,38)
        TNT1 A 0 A_PlaySound("SSG/Open",1)
        SSGR A 1 Offset(14,41)
        SSGR A 1 Offset(12,44)	
		Goto CaseSpawner
		
	ProccedToCheckReloadType:
		TNT1 A 0 A_JumpIfInventory("SSGAlt", 1, "InsertOneShellStart")//Check if fired the right barrel
		TNT1 A 0 A_JumpIfInventory("D4Shells", 2, "InsertTwoShellsStart")//Check if has ammo to reload 2 shells
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo",1,"InsertOneShellStart")//Check if still has a shell on left barrel
		Goto InsertEmptyStart
		
		InsertTwoShellsStart:
			TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"InsertTwoShellsFast")
			SSGR B 2 Offset(10,46)
			Goto InsertTwoShells		
		InsertOneShellStart:
			TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"InsertOneShellFast")
			SSGR O 2 Offset(10,46)
			Goto InsertOneShell
		InsertEmptyStart:
			TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"InsertEmptyFast")
			SSGR B 2 Offset(10,46)
			Goto InsertEmpty
		
		InsertTwoShellsFast:
			SSGR B 1 Offset(10,46)
			Goto InsertTwoShells		
		InsertOneShellFast:
			SSGR O 1 Offset(10,46)
			Goto InsertOneShell
		InsertEmptyFast:
			SSGR B 1 Offset(10,46)
			Goto InsertEmpty

			InsertTwoShells:
				SSGR CDE 2
				Goto ProccedNormalReload
			InsertOneShell:
				SSGR PQR 2
				Goto ProccedNormalReload

	InsertEmpty:
		SSGR STUF 1
		SSGR G 1 Offset(9,48)
        TNT1 A 0 A_playsound("SSG/Load",2)
		SSGR G 1 Offset(8,50)
		TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"InsertEmptyFast")
		SSGR V 2 Offset(7,52)
		SSGR V 2 Offset(6,54)
		SSGR W 2 Offset(7,52)
		SSGR W 2 Offset(8,50)
		SSGR X 2 Offset(9,48)
		SSGR X 2 Offset(10,46)
		SSGR Y 2 Offset(18,44)
		SSGR Y 2 Offset(1,36)
		Goto InsertShells

	InsertEmptyFast:
		SSGR V 1 Offset(7,52)
		SSGR V 1 Offset(6,54)
		SSGR W 1 Offset(7,52)
		SSGR W 1 Offset(8,50)
		SSGR X 1 Offset(9,48)
		SSGR X 1 Offset(10,46)
		SSGR Y 1 Offset(18,44)
		SSGR Y 1 Offset(1,36)
		Goto InsertShells

	ProccedNormalReload:
		SSGR F 2
		TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"ProccedFastReload")
		SSGR G 2 Offset(9,48)
        TNT1 A 0 A_playsound("SSG/Load",2)
		SSGR G 2 Offset(8,50)
		SSGR H 2 Offset(7,52)
		SSGR H 2 Offset(6,54)
		SSGR I 2 Offset(7,52)
		SSGR I 2 Offset(8,50)
		SSGR J 2 Offset(9,48)
		SSGR J 2 Offset(10,46)
		SSGR K 2 Offset(18,44)
		SSGR K 2 Offset(1,36)
		Goto InsertShells
		
	ProccedFastReload:
		SSGR G 1 Offset(9,48)
        TNT1 A 0 A_playsound("SSG/Load",2)
		SSGR G 1 Offset(8,50)
		SSGR H 1 Offset(7,52)
		SSGR H 1 Offset(6,54)
		SSGR I 1 Offset(7,52)
		SSGR I 1 Offset(8,50)
		SSGR J 1 Offset(9,48)
		SSGR J 1 Offset(10,46)
		SSGR K 1 Offset(18,44)
		SSGR K 1 Offset(1,36)
		Goto InsertShells
		
	EndReload:
		TNT1 A 0 A_PlaySound("SSG/Close",3)
		SSGR L 1 Offset(2,34)
		SSGR L 1 Offset(4,32)
		SSGR L 1 Offset(1,32)
		TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"EndReloadFast")
		SSGR M 2 Offset(3,35)
		SSGR M 2 Offset(6,38)
		Goto FinishReload
		
	EndReloadFast:	
		SSGR M 1 Offset(3,35)
		SSGR M 1 Offset(6,38)	
	FinishReload:
		TNT1 A 0 A_ReFire
		SSGG A 1 // 40 frames
		TNT1 A 0 A_TakeInventory("SSGAlt",1)
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
        Goto WReady		

	CaseSpawner:
		TNT1 A 0 A_JumpIfInventory("SSGCaseCounter",1,1)
		Goto ProccedToCheckReloadType
		TNT1 A 0 A_TakeInventory("SSGCaseCounter", 1)
		TNT1 A 0 A_FireCustomMissile("ShotCaseSpawn", 0, 0, 20, -8)
		Loop

	InsertShells:
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo",2,"EndReload")
		TNT1 A 0 A_JumpIfInventory("D4Shells",1,1)
		Goto EndReload
		TNT1 A 0 A_TakeInventory("D4Shells",1)
		TNT1 A 0 A_GiveInventory("D4SSGAmmo",1)
		TNT1 A 0 A_GiveInventory("DualSSGAmmo",1)
		Loop

// ----------------------------------------------------------------------------------------------------------------------------------------------------------
//
// SSG Aim Mode
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------
		
	AimSwitch:
		TNT1 A 0 A_TakeInventory("Unloading", 1)
		SSGG A 2 A_PlaySound("CLIPINSS",1)
		TNT1 A 0 A_JumpIfInventory("SSGAimModeSwitch",1,3)
		TNT1 A 0 A_GiveInventory("SSGAimModeSwitch",1)
		TNT1 A 0 A_Print("Alt-Mode: Aim Fire")
		Goto WReady
		TNT1 A 0 A_Takeinventory("SSGAimModeSwitch",1)
		TNT1 A 0 A_Print("Alt-Mode: Single Fire")
		Goto WReady

	AimMode:
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
		TNT1 A 0 A_ZoomFactor(1.25)
		SSGB A 1 Offset(-2,32)
		SSGB A 1 Offset(-5,32)
		SSGB B 1 Offset(-10,32)
		SSGB B 1 Offset(-12,31)
		SSGB B 1 Offset(-13,30)
		TNT1 A 0 A_GiveInventory("SSGAimMode", 1)
		Goto AimHold
	AimHold:
		SSGB C 1 A_WeaponReady(WRF_NOSECONDARY|WRF_NOSWITCH)
		TNT1 A 0 A_Refire("AimHold")
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("SSGAimMode", 1)
		SSGB B 1 Offset(-12,31)
		SSGB B 1 Offset(-10,32)
		SSGB A 1 Offset(-5,32)
		SSGB A 1 Offset(-2,32)
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady
		
	AimFire:
		TNT1 A 0 A_TakeInventory("SSGAimMode", 1)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_JumpIfInventory("SSGAlt", 1, "AimSingleFire")
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo", 2, "AimNormalFire")
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo", 1, "AimLastFire")
		SSGB B 1 Offset(-12,31)
		SSGB B 1 Offset(-10,32)
		SSGB A 1 Offset(-5,32)
		SSGB A 1 Offset(-2,32)
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady
		
		AimNormalFire:
			TNT1 A 0 A_JumpIfInventory("SSGAimModeSingle", 1, "AimSingleFire")
			TNT1 A 0 Offset(0,32)
			Goto NormalFire
		
		AimLastFire:
			TNT1 A 0 Offset(0,32)
			Goto LastFire

		AimSingleFire:
			TNT1 A 0 Offset(0,32)
			Goto SingleFire

// ----------------------------------------------------------------------------------------------------------------------------------------------------------
//
// Double Trouble (Dual Wield - Mode)
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------
		
	ReadyDualWield:
		SSG1 A 1 A_WeaponReady(WRF_NOSECONDARY)
		Goto WReady
	RightWeapon:
        TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "FireSecondary")
		SSG2 A 1 A_JumpIfInventory("Reloading",1,"ReloadSecondary")
		Goto Flash
	DryFire:
	    SSG1 A 1 A_PlaySound("weapons/empty", 2)
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady
	DryFireSecondary:
	    SSG2 A 1 A_PlaySound("weapons/empty", 1)
		TNT1 A 0 A_TakeInventory("ChecksIsFiringTheRightGun",1)
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto Flash
		
	DualWieldAnimChecker:
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, 5)
		TNT1 A 0 A_JumpIfInventory("Taunting",1,"TauntL")
		TNT1 A 0 A_JumpIfInventory("IsUpgradingWeapons",1,"UpgradeWeapons")
        TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
		Goto WReady
		TNT1 A 0 A_Takeinventory("Taunting",1)
        TNT1 A 0 A_JumpIfInventory("Reloading",1,"ReloadDualWield")
		TNT1 A 0 A_Takeinventory("IsUpgradingWeapons",1)
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKickDualWield")
		Goto WReady
		
	DualWield:
		TNT1 A 0 A_Takeinventory("StartDualWield",1)
		TNT1 A 0 A_JumpIfInventory("IsPlayingAsDM",1,3) // Skips the Upgrade Checker
		TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunDoubleTrouble",1,2)
		TNT1 A 0 A_Print("You need Double Trouble upgrade", 2)
		Goto WReady
		TNT1 A 0 A_JumpIfInventory("SSGDualWieldEnabler", 1, "GetDual")
		Goto FailDualWield
		
	GetDual:	
		TNT1 A 0 A_GiveInventory("NoParkour", 1)
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "UnDual")
		SSGT ABCDE 1
		TNT1 A 6
		TNT1 A 0 A_TakeInventory("IsUpgradeableWeapon", 1)
		TNT1 A 0 A_GiveInventory("IsDualWeapon", 1)
		TNT1 A 0 A_GiveInventory("SSGDualWield", 1)
		TNT1 A 0 A_GunFlash("FakeSelect")
		SSG1 MNOP 1
		TNT1 A 0 A_PlaySound("SSG/Close",3)
		SSG1 QR 1
		TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady	
		
	UnDual:
		TNT1 A 0 A_GiveInventory("IsUpgradeableWeapon", 1)
		TNT1 A 0 A_TakeInventory("IsDualWeapon", 1)
		TNT1 A 0 A_TakeInventory("SSGDualWield", 1)
		TNT1 A 0 A_GunFlash("FakeDeselect")
		SSG1 AIJ 1
		TNT1 A 5
		SSGT EDCBA 1
		TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady
		
	DeployDualWield:
		TNT1 A 0 A_GunFlash("FakeSelect")
		SSG1 MNOP 1
		TNT1 A 0 A_PlaySound("SSG/Close",3)
		SSG1 QR 1
		TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady
		
	FakeSelect:
		SSG2 MNOP 1
		TNT1 A 0 A_PlaySound("SSG/Close",6)
		SSG2 QR 1
		Goto Flash

	FakeDeselect:
		SSG2 AIJ 1
		Goto Flash
		
	DeselectDualWield:
		TNT1 A 0 A_GunFlash("UnFlash")
		SSGL ABCDE 1
		TNT1 A 0 A_TakeInventory("SSGDualWield", 1)
        TNT1 A 0 A_TakeInventory("IsDualWeapon",1)
		SSGL E 0
		Goto DeselectSequence
		
	//Fire States
	FireDualWield:
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo", 2, 1)
		Goto ReloadDualWield
		TNT1 A 0 A_TakeInventory("D4SSGAmmo", 2)
		TNT1 A 0 A_TakeInventory("DualSSGAmmo", 2)
		TNT1 A 0 A_ALertMonsters
		TNT1 A 0 A_firebullets (0,0,1,15,"shotpuff",0,240)
		TNT1 A 0 A_FireBullets (12.0, 5.0, 14, 13, "ShotgunPuff")
		TNT1 A 0 A_SetPitch(-6.0 + pitch)
		RIFF A 0 A_FireCustomMissile("DistantFireSoundSSG", random(-1,1), 0, 0, -12, 0, random(-1,1))
		TNT1 A 0 A_SetBlend("orange",0.13,8)
		SSG1 B 1 BRIGHT	A_playsound("SSG/Fire", 5)
		TNT1 A 0 A_Playsound("SSG/Mixed", 7)
		TNT1 AAAAAAAAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-10,10), 0, 0, -12, 0, random(-5,5))
		TNT1 AAAAAAAAAAAAAAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-19,19), 0, -1, 0, 0, random(-9,9))
		TNT1 AAAAAAAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-19,19), 0, -1, 0, 0, random(-9,9))
		SSG1 C 1 BRIGHT		
		SSG1 DEFGH 1
		TNT1 A 0 A_Refire("Fire")
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		TNT1 A 0 A_JumpIfInventory("D4Shells", 2, "ReloadDualWield")
		Goto WReady
		
	FireSecondary:
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo2", 2, 1)
		Goto ReloadSecondary
		TNT1 A 0 A_GiveInventory("ChecksIsFiringTheRightGun",1)
		TNT1 A 0 A_TakeInventory("DualSSGAmmo", 2)
		TNT1 A 0 A_TakeInventory("D4SSGAmmo2", 2)
		TNT1 A 0 A_ALertMonsters
		TNT1 A 0 A_firebullets (0,0,1,15,"shotpuff",0,240)
		TNT1 A 0 A_FireBullets (12.0, 5.0, 14, 13, "ShotgunPuff")
		TNT1 A 0 A_SetPitch(-6.0 + pitch)
		RIFF A 0 A_FireCustomMissile("DistantFireSoundSSG", random(-1,1), 0, 0, -12, 0, random(-1,1))
		TNT1 A 0 A_SetBlend("orange",0.13,8)
		SSG2 B 1 BRIGHT	A_playsound("SSG/Fire", 5)
		TNT1 A 0 A_Playsound("SSG/Mixed", 7)
		TNT1 AAAAAAAAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-10,10), 0, 0, -12, 0, random(-5,5))
		TNT1 AAAAAAAAAAAAAAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-19,19), 0, -1, 0, 0, random(-9,9))
		TNT1 AAAAAAAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-19,19), 0, -1, 0, 0, random(-9,9))
		SSG2 C 1 BRIGHT	
		SSG2 DEFGH 1
		TNT1 A 0 A_TakeInventory("ChecksIsFiringTheRightGun",1)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary",1,"FireSecondary")
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		TNT1 A 0 A_JumpIfInventory("D4Shells", 2, "ReloadSecondary")
		Goto Flash
		
	ReloadDualWield:
		SSG1 A 1
		TNT1 A 0 A_TakeInventory("Reloading",1)	
		TNT1 A 0 A_JumpIfInventory("SSGAlt", 1, "Reload1Shell")
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo", 2, "WReady")
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo", 1, "Reload1Shell")
		TNT1 A 0 A_JumpIfInventory("D4Shells", 2, 1)
		Goto DryFire
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
		TNT1 A 0 A_TakeInventory("SSGCaseCounter", 2)	
		TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"ReloadDualWieldFast")
		SSG1 HGIJK 2
        TNT1 A 0 A_PlaySound("SSG/Open",1)
		TNT1 AA 0 A_FireCustomMissile ("ShotCaseSpawn", 0, 0, 20, -8)
		SSG1 L 2
		TNT1 A 13
		TNT1 A 0 A_TakeInventory("D4Shells", 2,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_GiveInventory("D4SSGAmmo", 2)
		TNT1 A 0 A_GiveInventory("DualSSGAmmo", 2)
        TNT1 A 0 A_playsound("SSG/Load",2)
		TNT1 A 14
		SSG1 MNOP 2
		TNT1 A 0 A_PlaySound("SSG/Close",3)
		Goto EndReloadDualWield

	ReloadDualWieldFast:
		SSG1 HGIJK 1
        TNT1 A 0 A_PlaySound("SSG/Open",1)
		TNT1 AA 0 A_FireCustomMissile ("ShotCaseSpawn", 0, 0, 20, -8)
		SSG1 L 1
		TNT1 A 12
		TNT1 A 0 A_TakeInventory("D4Shells", 2,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_GiveInventory("D4SSGAmmo", 2)
		TNT1 A 0 A_GiveInventory("DualSSGAmmo", 2)
        TNT1 A 0 A_playsound("SSG/Load",2)
		TNT1 A 13
		SSG1 MNOP 1
		TNT1 A 0 A_PlaySound("SSG/Close",3)
		Goto EndReloadDualWield

	EndReloadDualWield:
		SSG1 QR 2
		SSG1 A 1
		TNT1 A 0 A_Refire("Fire")
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto WReady
		
	Reload1Shell:
		TNT1 A 0 A_JumpIfInventory("D4Shells", 1, 1)
		Goto DryFire
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
		TNT1 A 0 A_TakeInventory("SSGCaseCounter", 2)
		TNT1 A 0 A_TakeInventory("SSGAlt",1)
		TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"Reload1ShellFast")
		SSG1 HGIJK 2
        TNT1 A 0 A_PlaySound("SSG/Open",1)
		TNT1 A 0 A_FireCustomMissile ("ShotCaseSpawn", 0, 0, 20, -8)
		SSG1 L 1
		TNT1 A 8
		TNT1 A 0 A_TakeInventory("D4Shells", 1,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_GiveInventory("D4SSGAmmo", 1)
		TNT1 A 0 A_GiveInventory("DualSSGAmmo", 1)
        TNT1 A 0 A_playsound("SSG/Load",2)
		TNT1 A 12
		SSG1 MNOP 2
		TNT1 A 0 A_PlaySound("SSG/Close",3)
		Goto EndReloadDualWield
		
	Reload1ShellFast:
		SSG1 HGIJK 1
        TNT1 A 0 A_PlaySound("SSG/Open",1)
		TNT1 A 0 A_FireCustomMissile ("ShotCaseSpawn", 0, 0, 20, -8)
		SSG1 L 1
		TNT1 A 6
		TNT1 A 0 A_TakeInventory("D4Shells", 1,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_GiveInventory("D4SSGAmmo", 1)
		TNT1 A 0 A_GiveInventory("DualSSGAmmo", 1)
        TNT1 A 0 A_playsound("SSG/Load",2)
		TNT1 A 10
		SSG1 MNOP 1
		TNT1 A 0 A_PlaySound("SSG/Close",3)
		Goto EndReloadDualWield
		
	ReloadSecondary:
		SSG2 A 1
		TNT1 A 0 A_TakeInventory("Reloading",1)	
		TNT1 A 0 A_JumpIfInventory("D4SSGAmmo2", 2,"Flash")//Checks if you have ammo on Second SSG
		TNT1 A 0 A_JumpIfInventory("D4Shells", 2, 1) // No Jump to DriFireSecondary if you have 2 Shell
		Goto DryFireSecondary
		TNT1 A 0 A_JumpIfInventory("D4Shells", 4, 1) // Needed to fix the Extra Ammo Bug
		Goto Flash
		TNT1 A 0 A_GiveInventory("ChecksIsFiringTheRightGun",1)
        TNT1 A 0 A_GiveInventory("NoParkour", 1)
		TNT1 A 0 A_TakeInventory("IsFiringSecondary",1)
		TNT1 A 0 A_TakeInventory("FiredSecondary",1)
		TNT1 A 0 A_JumpIfInventory("HasUpgradeSuperShotgunFastReload",1,"ReloadSecondaryFast")
		SSG2 HGIJK 2
        TNT1 A 0 A_PlaySound("SSG/Open",4)
		TNT1 AA 0 A_FireCustomMissile ("ShotCaseSpawn", 0, 0, -20, -8)
		SSG2 L 2
		TNT1 A 13
		TNT1 A 0 A_TakeInventory("D4Shells", 2,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_GiveInventory("DualSSGAmmo", 2)
		TNT1 A 0 A_GiveInventory("D4SSGAmmo2", 2)
        TNT1 A 0 A_playsound("SSG/Load",5)
		TNT1 A 14
		SSG2 MNOP 2
		TNT1 A 0 A_PlaySound("SSG/Close",6)
		Goto EndReloadSecondary
		
	ReloadSecondaryFast:
		SSG2 HGIJK 1
        TNT1 A 0 A_PlaySound("SSG/Open",4)
		TNT1 AA 0 A_FireCustomMissile ("ShotCaseSpawn", 0, 0, -20, -8)
		SSG2 L 1
		TNT1 A 12
		TNT1 A 0 A_TakeInventory("D4Shells", 2,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_GiveInventory("DualSSGAmmo", 2)
		TNT1 A 0 A_GiveInventory("D4SSGAmmo2", 2)
        TNT1 A 0 A_playsound("SSG/Load",5)
		TNT1 A 13
		SSG2 MNOP 1
		TNT1 A 0 A_PlaySound("SSG/Close",6)
		Goto EndReloadSecondary
		
	EndReloadSecondary:
		SSG2 QR 2
		SSG2 A 1
		TNT1 A 0 A_TakeInventory("ChecksIsFiringTheRightGun",1)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary",1,"FireSecondary")
        TNT1 A 0 A_TakeInventory("NoParkour", 1)
		Goto Flash

// ----------------------------------------------------------------------------------------------------------------------------------------------------------
//
// Flash States
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------

	PunchFlash:
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "PunchFlashDualWield")
		SSGT ACE 1
		Goto Flash
		
		PunchFlashDualWield:
			SSG1 AIJ 1
			Stop
		
	KickFlash:
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "KickFlashDualWield")
		SSGK A 0
		Goto RealKickFlash
		
		KickFlashDualWield:
			SSGL A 0
			Goto RealKickFlash
			RealKickFlash:
				"####" ABCD 1
				"####" E 8
				"####" DCBA 1
				Goto Flash

	AirKickFlash:
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "AirKickFlashDualWield")
		SSGK A 0
		Goto RealAirKickFlash

		AirKickFlashDualWield:
			SSGL A 0
			Goto RealAirKickFlash
			RealAirKickFlash:
				"####" ABCD 1
				"####" E 10
				"####" DCBA 1
				Goto Flash
		
	SlideKickStartFlash:
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "SlideKickStartFlashDualWield")
		SSGK A 0
		Goto RealSlideKickStartFlash
		
		SlideKickStartFlashDualWield:
			SSGL A 0
			Goto RealSlideKickStartFlash
			RealSlideKickStartFlash:
				"####" ABCD 1
				"####" E 17
	SlideKickEndFlash:
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "SlideKickEndFlashDualWield")
		SSGK A 0
		Goto RealSlideKickEndFlash

		SlideKickEndFlashDualWield:
			SSGL A 0
			Goto RealSlideKickEndFlash
			RealSlideKickEndFlash:
				"####" E 5
				"####" DCBA 1
				Goto Flash

	TauntFlash:
		SSGT ABCD 1
		SSGT E 35
		SSGT DCBA 1
		Goto Flash
		
	GrenadeFlash:
		TNT1 A 0 A_JumpIfInventory("SSGDualWield", 1, "GrenadeFlashDualWield")
		SSGK A 0
		Goto RealGrenadeFlash
		
		GrenadeFlashDualWield:
			SSGL A 0
			Goto RealGrenadeFlash
			RealGrenadeFlash:
				"####" ABCDE 1
				"####" A 0 A_JumpIfInventory("SSGDualWield", 1, "UnFlash")
				Goto Flash
	}
}

Actor SSGDualWield : Inventory {inventory.maxamount 1} // Dual Wield Mode handler
Actor SSGCaseCounter : Inventory {inventory.maxamount 2} // Fire Casing Counter
Actor SSGDualWieldEnabler : Inventory {inventory.maxamount 1} // Enables the Dual Wield Mode
Actor SSGAimMode : Inventory {inventory.maxamount 1} // Aim Mode handler
Actor SSGAimModeSingle : Inventory {inventory.maxamount 1} // Single Fire on Aim Mode
Actor SSGAimModeSwitch : Inventory {inventory.maxamount 1} // Switch to Aim Mode

ACTOR DualSSGAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 4
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 4
   Inventory.Icon "D4W3B0"
}

ACTOR D4SSGAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 2
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 2
   Inventory.Icon "D4W3B0"
}

//Fake Ammo for Left SSG
ACTOR D4SSGAmmo2 : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 2
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 2
}